{
  "name": "base configuration used for all benchmarks",
  "description": "",
  "holdThread": false,
  "sparkConfig": {

    "spark.driver.cores": 8,
    "spark.cores.max": "32",
    "spark.executor.memory": "4g",

    "spark.eventLog.enabled":  true,

    "spark.sql.adaptive.enabled": true,
    "spark.sql.adaptive.coalescePartitions.enabled": true,
    "spark.sql.adaptive.coalescePartitions.parallelismFirst": false,
    "spark.sql.adaptive.coalescePartitions.minPartitionSize": "20mb",
    "spark.sql.adaptive.advisoryPartitionSizeInBytes": "100mb",
    
    "spark.sql.files.maxPartitionBytes": "800mb"
  },
  "warmup": [
    {
      "workloadName": "warmup loop1000",
      "inputPath": "resources/tripdata-partitionBy-PULocationID.parquet",
      "inputType": "PARQUET",
      "className": "jobs.implementations.udf.Loop1000",
      "totalIterations": 2,
      "startTimeMs": "0",
      "poissonRateInMinutes": 0,
      "frequency": "SEQ",
      "params": {
      }
    },
    {
      "workloadName": "warmup loop500",
      "inputPath": "resources/tripdata-partitionBy-PULocationID.parquet",
      "inputType": "PARQUET",
      "className": "jobs.implementations.udf.Loop500",
      "totalIterations": 2,
      "startTimeMs": "0",
      "poissonRateInMinutes": 0,
      "frequency": "SEQ",
      "params": {
      }
    },
    {
      "workloadName": "warmup loop100",
      "inputPath": "resources/tripdata-partitionBy-PULocationID.parquet",
      "inputType": "PARQUET",
      "className": "jobs.implementations.udf.Loop100",
      "totalIterations": 2,
      "startTimeMs": "0",
      "poissonRateInMinutes": 0,
      "frequency": "SEQ",
      "params": {
      }
    },
    {
      "workloadName": "warmup loop20",
      "inputPath": "resources/tripdata-partitionBy-PULocationID.parquet",
      "inputType": "PARQUET",
      "className": "jobs.implementations.udf.Loop20",
      "totalIterations": 2,
      "startTimeMs": "0",
      "poissonRateInMinutes": 0,
      "frequency": "SEQ",
      "params": {
      }
    }
  ],
  "users": []
}
